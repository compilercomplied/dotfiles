" \ ************** \
" \ Plugin Manager \
" \ ************** \

" Auto install Plug if not installed. Runs PlugInstall afterwards.
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
" Make sure you use single quotes

" ### General purpose ###
Plug 'junegunn/vim-easy-align'          " Aligning
"Plug 'vim-airline/vim-airline'          " Status bar
Plug 'tpope/vim-fugitive'               " Git wrapper
"Plug 'scrooloose/syntastic'             " Syntax checking
Plug 'tpope/vim-surround'               " Surrounds edit. Good for HTML/XML editing.
Plug 'tpope/vim-commentary'             " Comments+text objects.
Plug 'tpope/vim-sensible'               " Sane defaults
Plug 'xolox/vim-easytags'               " Gen ctags
Plug 'xolox/vim-misc'                   " Dependency
Plug 'majutsushi/tagbar'                " Browse ctag
Plug 'junegunn/fzf.vim'                 " Fuzzy find
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

" ### Python ###
Plug 'davidhalter/jedi-vim'             " Code completion
Plug 'tmhedberg/SimpylFold'             " Folding
"Plug 'vim-scripts/indentpython.vim'     " PEP8 indents
Plug 'jmcantrell/vim-virtualenv'        " Virtual envs
Plug 'nvie/vim-flake8'                  " Flake8 support (syntax checker/linting)

" ### Web ###
Plug 'mattn/emmet-vim'                  " https://emmet.io like
"Plug 'elzr/vim-json'                    " Better JSON

" ### Themes ###
"Plug 'vim-airline/vim-airline-themes'
Plug 'morhetz/gruvbox'
Plug 'altercation/vim-colors-solarized'

" Initialize plugin system
call plug#end()


" \ ********************* \
" \ General functionality \
" \ ********************* \

" Vim needs a POSIX-Compliant shell. Fish is not.
if $SHELL =~ 'bin/fish' || $SHELL =~ 'bin/zsh'
    set shell=/usr/bin/bash
endif


filetype plugin indent on
set guifont=DejaVu\ Sans\ Mono:h20

set encoding=utf-8              " keep the encoding as high as possible in $MYVIMRC
set modeline                    " modeline
set tabstop=4                   " show existing tab with 4 spaces width
set softtabstop=4               " number of spaces tab counts for while editing 
set shiftwidth=4                " when indenting with '>', use 4 spaces width
set expandtab                   " on pressing tab, insert 4 spaces
set autoindent                  " copy indent from current line
syntax enable                   " syntax highlight
set number                      " show line numbers
set relativenumber              " use relative line numbers
let g:pymode_python = 'python3' " python 3 as default
set backspace=indent,eol,start  " backspace behavior in normal mode
set splitbelow                  " split below
set splitright                  " split to the right
set mouse=a                     " allow mouse
set fileformat=unix             " gives <EOL> of current buffer 
"set textwidth=95                " line's 'max char count
set foldmethod=indent           " indent= lines with equal indent create a fold
set foldlevel=95                " folds with a higher level will be closed
set colorcolumn=95              " color column
set tags=~/code/.tags           " ctags dir

highlight ColorColumn
            \ ctermbg=0
            \ guibg=lightgrey   " adds color column of line, width set with `set colorcolumn`


" \ ****************** \
" \ Appearance-related \
" \ ****************** \
set t_Co=256
set laststatus=2
colorscheme solarized 
let g:solarized_termcolors=16
let g:solarized_termtrans=1
set background=dark


" \ ********************* \
" \ Settings source files \
" \ ********************* \
source ~/.vim/settings/statusline.vim
source ~/.vim/settings/functions.vim
source ~/.vim/settings/mappings.vim


" \ ******* \
" \ Sources \
" \ ******* \

autocmd BufNewFile,BufRead *.py     source ~/.vim/sources/py.vim
autocmd BufNewFile,BufRead *.cpp    source ~/.vim/sources/cpp.vim
autocmd BufNewFile,BufRead *.c      source ~/.vim/sources/c.vim
autocmd BufNewFile,BufRead *.tex    source ~/.vim/sources/tex.vim


"  ********* \
" \ Templates \
" \ ********* \

"au BufNewFile *.py r ~/.vim/templates/temp.py
"au BufNewFile *.sh r ~/.vim/templates/temp.sh
au BufNewFile *.tex r ~/.vim/templates/temp.tex
